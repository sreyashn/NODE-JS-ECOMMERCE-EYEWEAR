<%- include('../Layouts/adminHeader.ejs') %>


    <form action="/admin/editProduct" method="post" enctype="multipart/form-data" id="product-form"
    onsubmit="return validationChecking()">

        <section class="content-main">
            <div class="row">
                <div class="col-12">
                    <div class="content-header">
                        <h2 class="content-title">Edit Product</h2>
                        <div>
                            <a href='/admin/products'> <button
                                    class="btn btn-light rounded font-sm mr-5 text-body hover-up">cancel</button></a>
                            <input type="submit" class="btn btn-md rounded font-sm hover-up" value="Upload"
                              >
                              <div id="invalid">
                                <% if (typeof error !=='undefined' && error) { %>
                                    <p class="text-danger" id="message">
                                        <%= error %>
                                    </p>
                                    <% } %>
                                    
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-8">
                    <div class="card mb-4">
                        <div class="card-body">
                            <input type="hidden" name="product_id" value="<%= product._id %>" >
                            <div class="mb-4">
                                <label for="product_title" class="form-label">Product title</label>
                                <input type="text" placeholder="Type here"  value="<%= product.name %>" name="name" class="form-control"
                                    id="product_title">
                                <div class="error-message" style="color: red;" id="product_title-error"></div>

                            </div>
                            <div class="row gx-3">
                        

                                   
                                
                                
                                <div class="col-md-6  mb-3">
                                    <label for="inputPassword4" class="form-label">category</label>
                                    <select name="category" class="form-control">
                                        // <option value="">Select a Category
                                        // </option>
                                        <% categories?.forEach(category=> { %>
                                            <option value="<%= category._id %>"  <% if (category._id.toString() === product.category.toString()) { %>disabled selected <% } %> >
                                                <%= category.name %>
                                            </option>
                                        
                                            <% }); %>



                                    </select>
                                    <div class="error-message" style="color: red;" id="product_brand-error"></div>

                                </div>



                            </div>


                        </div>
                    </div> <!-- card end// -->
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="row gx-3">
                                <div class="col-md-4">
                                    <label for="inputPrice" class="form-label">price</label>
                                    <input type="text" class="form-control"  value="<%= product.price %>" name="price" id="inputprice"
                                        placeholder="enter the price">
                                    <div class="error-message" style="color: red;" id="product_price-error"></div>
                                </div>




                          

                            </div>
                            <div class="row gx-3">
                                <div class="col-md-12 card mb-4">
                                    <div class="card-body">


                                            
                                            <!-- Add Product Images Here -->
                                        </div>
                                        



                                    </div>
                                </div>
                            </div>




                            <div>
                                <label class="form-label">Description</label>
                                <textarea placeholder="Type here" name="description"   class="form-control"
                                    rows="4"><%= product.description %></textarea>
                                <div class="error-message" style="color: red;" id="description-error"></div>

                            </div>
                            <div class="col-md-4">
                                <label for="inputPrice" class="form-label">Stock</label>
                                <input type="text" class="form-control"  value="<%= product.stock %>" name="stock" id="inputprice"
                                    placeholder="enter the stock">
                                <div class="error-message" style="color: red;" id="product_price-error"></div>
                            </div>
                        </div>
                    </div> 

                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h4>Picture</h4>
                    </div>
                    <div class="card-body">
                        <div class="row d-flex justify-content-around flex-row">
                            <div class="card col-lg-8 p-2">
                                <div class="images-container">
                                    <div class="image-preview-container d-flex flex-wrap justify-content-around">
                
                                        <% if (product.image && product.image.length > 0) { %>
                                            <% for (let i = 0; i < product.image.length; i++) { %>
                                                <div class="image-container border-1 mb-4">
                                                    <input type="checkbox" id="delete-checkbox<%= i %>" name="deletecheckbox" value="<%= i%>">
                                                    <label for="delete-checkbox<%= i %>">Delete</label>
                                                    <img class="image-preview"  src="/assets/imgs/product/<%= product.image[i] %>" alt="Default">
                                                </div>
                                            <% } %>
                                        <% } else{ %>
                                            <div class="image-container border-1 mb-4">
                                                <img class="image-preview" style="width: 100px; height: 100px; margin-bottom: 20px;" src="/uploadimage.svg" alt="Default">
                                            </div>
                                        <% } %>
                                    </div>
                                    <input class="form-control" name="image" multiple="multiple" type="file" onchange="displayImages(this)">
                                
                                <div class="error-message" style="color: red;" id="product_image-error"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <script>
                    function displayImages(input) {
                        const previewContainer = document.querySelector('.image-preview-container');
                        previewContainer.innerHTML = '';
                
                        if (input.files && input.files.length > 0) {
                            for (let i = 0; i < input.files.length; i++) {
                                const reader = new FileReader();
                                const allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif)$/i;
                
                                if (!allowedExtensions.exec(input.files[i].name)) {
                                    alert('Invalid file type. Please select only images');
                                    input.value = ''; // Clear the inputif)
                                    return;
                                }
                
                                reader.onload = function (e) {
                                    const imagePreview = document.createElement('div');
                                    imagePreview.classList.add('image-container');
                
                                    const img = document.createElement('img');
                                    img.src = e.target.result;
                                    img.style.width = '100px';
                                    img.style.height = '100px';
                                    img.style.marginBottom = '10px';
                                    img.style.marginRight = '5px';
                                    img.style.marginLeft = '5px';
                                    img.classList.add('image-preview');
                
                                    const filename = document.createElement('span');
                                    filename.innerHTML = input.files[i].name;
                                    filename.style.marginBottom = '15px';
                
                                    // const cancelButton = document.createElement('button');
                                    // cancelButton.type = 'button';
                                    // cancelButton.classList.add('btn', 'btn-danger', 'btn-sm');
                                    // cancelButton.innerHTML = 'Cancel';
                                    // cancelButton.onclick = function () {
                                    //     cancelImage(this, imagePreview);
                                    // };
                
                                    imagePreview.appendChild(img);
                                    imagePreview.appendChild(filename);
                                    imagePreview.appendChild(cancelButton);
                                    previewContainer.appendChild(imagePreview);
                                };
                
                                reader.readAsDataURL(input.files[i]);
                            }
                        } else {
                            // const noFileChosen = document.createElement('span');
                            // noFileChosen.innerHTML = 'No file chosen';
                            // noFileChosen.style.marginBottom = '10px';
                            // previewContainer.appendChild(noFileChosen);

                            const defaultImagePreview = document.createElement('div');
                                                    defaultImagePreview.classList.add('image-container');
                                                    const defaultImg = document.createElement('img');
                                                    defaultImg.src = '/uploadimage.svg';
                                                    defaultImg.style.width = '100px';
                                                    defaultImg.style.height = '100px';
                                                  
                                                    defaultImg.classList.add('image-preview');
                                                    defaultImagePreview.appendChild(defaultImg);
                                                    previewContainer.appendChild(defaultImagePreview);
                        }
                    }
                
                    // function cancelImage(button, imageContainer) {
                    //     imageContainer.remove(); // Remove the image container directly
                
                    //     // Check if all images are canceled to show "No file chosen"
                    //     const previewContainer = document.querySelector('.image-preview-container');
                    //     if (previewContainer.childElementCount === 0) {
                    //         const noFileChosen = document.createElement('span');
                    //         noFileChosen.innerHTML = 'No file chosen';
                    //         noFileChosen.style.marginBottom = '10px';
                    //         previewContainer.appendChild(noFileChosen);
                    //     }
                    // }
                
                   
                </script>

                

<div id="invalid">
    <% if (typeof message !=='undefined' && message) { %>
        <p style="color: rgb(8, 96, 0);" id="message">
            <%= message %>
        </p>
        <% } %>
                      
</div>
</div> <!-- card end// -->
</div>

</div>
</section>
</form>


<script>

function displayImage(imageNumber, input) {
            const preview = document.getElementById(`image-preview${imageNumber}`);

            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                };
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.src = '';
            }
        }

        function viewImage(event, imageIndex) {
    const imgView = document.getElementById(`imgView${imageIndex}`);
    imgView.src = URL.createObjectURL(event.target.files[0]);
}

</script>

    <%- include('../Layouts/adminFooter.ejs') %>
<!-- 
                
            <div class="col-lg-3">
                <div class="card mb-4">
                    <div class="card-header">
                        <h4>Picture</h4>
                    </div>
                    <div class="card-body">
                        
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="images-container">
                                    <div class="image-preview-container d-flex flex-wrap justify-content-center">
                                         Placeholder for default image 

                                        
                                        <% if (product.image && product.image.length > 0) { %>
                                            <% for (let i = 0; i < product.image.length; i++) { %>
                                        <div class="image-container border-1">
                                            <img class="image-preview"  src="/assets/imgs/product/<%= product.image[i] %>" alt="Default">
                                            <button type="button" class="btn btn-danger btn-sm" onclick="cancelImage(this)">Cancel</button>
                                        </div>
                                        <% } %>
                                        <% } else{ %>
                                            <div class="image-container border-1 mb-4">
                                                <img class="image-preview" style="width: 100px; height: 100px; margin-bottom: 20px;" src="/uploadimage.svg" alt="Default">
                                            </div>
                                        <% } %>
                                    </div>
                                    </div>
                                    <input class="form-control" name="image" id="image" multiple="multiple" type="file" onchange="displayImages(this)">

                                    <div class="error-message" style="color: red;" id="image-error"></div>
                                </div>


                                <script>
                                    function displayImages(input) {
                                        const previewContainer = document.querySelector('.image-preview-container');
                                        previewContainer.innerHTML = '';
                                
                                        if (input.files && input.files.length > 0) {
                                            for (let i = 0; i < input.files.length; i++) {
                                                const reader = new FileReader();
                                                const allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif)$/i;
                                
                                                if (!allowedExtensions.exec(input.files[i].name)) {
                                                    alert('Invalid file type. Please select only images');
                                                    input.value = ''; // Clear the inputif)
                                                    return;
                                                }
                                
                                                reader.onload = function (e) {
                                                    const imagePreview = document.createElement('div');
                                                    imagePreview.classList.add('image-container', 'border-1', 'd-flex', 'flex-column', 'align-items-center');
                                
                                                    const img = document.createElement('img');
                                                    img.src = e.target.result;
                                                    img.style.width = '100px';
                                                    img.style.height = '100px';
                                                    img.style.marginBottom = '10px';
                                                    img.style.marginRight = '5px';
                                                    img.style.marginLeft = '5px';
                                                    img.classList.add('image-preview');
                                
                                                    const filename = document.createElement('span');
                                                    filename.innerHTML = input.files[i].name;
                                                    filename.style.marginBottom = '15px';
                                
                                                    const cancelButton = document.createElement('button');
                                                    cancelButton.type = 'button';
                                                    cancelButton.classList.add('btn', 'btn-danger', 'btn-sm');
                                                    cancelButton.innerHTML = 'Cancel';
                                                    cancelButton.onclick = function () {
                                                        cancelImage(this, imagePreview);
                                                    };
                                
                                                    imagePreview.appendChild(img);
                                                    imagePreview.appendChild(filename);
                                                    imagePreview.appendChild(cancelButton);
                                                    previewContainer.appendChild(imagePreview);
                                                };
                                
                                                reader.readAsDataURL(input.files[i]);
                                            }
                                        } else {
                                            const noFileChosen = document.createElement('span');
                                            noFileChosen.innerHTML = 'No file chosen';
                                            noFileChosen.style.marginBottom = '10px';
                                            previewContainer.appendChild(noFileChosen);
                                        }
                                    }
                                    function cancelImage(button) {
    const imageContainer = button.parentNode; // Get the parent node, which is the image-container element
    if (imageContainer) {
        imageContainer.remove(); // Remove the image container directly

        // Check if all images are canceled to show "No file chosen"
        const previewContainer = document.querySelector('.image-preview-container');
        if (previewContainer.childElementCount === 0) {
            const noFileChosen = document.createElement('span');
            noFileChosen.innerHTML = 'No file chosen';
            noFileChosen.style.marginBottom = '10px';
            previewContainer.appendChild(noFileChosen);
        }
    }
}

                                </script> -->
                                
                                
                                
                                
                                
                            </div>
                        </div>
                    </div>
                </div> 
          
            </div>





                

<div id="invalid">
    <% if (typeof message !=='undefined' && message) { %>
        <p style="color: rgb(8, 96, 0);" id="message">
            <%= message %>
        </p>
        <% } %>
                      
</div>
</div> <!-- card end// -->
</div>

</div>
</section>
</form>


<!-- <script>

function displayImage(imageNumber, input) {
            const preview = document.getElementById(`image-preview${imageNumber}`);

            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                };
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.src = '';
            }
        }

        function viewImage(event, imageIndex) {
    const imgView = document.getElementById(`imgView${imageIndex}`);
    imgView.src = URL.createObjectURL(event.target.files[0]);
}

</script>

    <%- include('../Layouts/adminFooter.ejs') %> -->